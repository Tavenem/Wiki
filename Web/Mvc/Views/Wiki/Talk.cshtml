@model TalkViewModel

<div class="wiki-talk-messages">
    <ul id="wiki-talk-message-list"></ul>
    @if ((Model.Messages?.Count ?? 0) == 0)
    {
        <div class="wiki-talk-nomessages"><p>No messages yet</p></div>
    }
</div>
@if (Model.Data.CanEdit)
{
    <div id="wiki-talk-newmessage" class="wiki-talk-reply">
        <textarea id="wiki-talk-newmessage-input" class="form-control" placeholder="Add a new message"></textarea>
        <div class="wiki-message-controls">
            <div>
                <button id="wiki-talk-emoji" class="btn btn-sm btn-outline-light">😀</button>
                @if (!string.IsNullOrEmpty(WikiWebConfig.TenorAPIKey))
                {
                    <button id="wiki-talk-gif" class="btn btn-sm btn-outline-light">GIF</button>
                }
                <button id="wiki-talk-editor" class="btn btn-sm btn-outline-light">✏️</button>
            </div>
            <button id="wiki-talk-send" type="button" class="btn btn-sm btn-primary">Post</button>
        </div>
    </div>
    <div id="wiki-talk-tenor">
        <div id="wiki-talk-tenor-search">
            <svg xmlns="http://www.w3.org/2000/svg" class="wiki-search-icon">
                <g fill="none" stroke-width="2">
                    <path d="M11.29 11.71l-4-4" />
                    <circle cx="5" cy="5" r="4" />
                </g>
            </svg>
            <input id="wiki-talk-tenor-search-text" type="search" role="search" placeholder="Search Tenor" autocomplete="off" list="wiki-talk-tenor-suggestions" />
            <datalist id="wiki-talk-tenor-suggestions"></datalist>
        </div>
        <div id="wiki-talk-tenor-search-suggestions"></div>
        <div id="wiki-talk-tenor-content"><span>Loading...</span></div>
    </div>
}
else
{
    <div class="wiki-talk-signin-prompt">Sign in to post your own messages.</div>
}

@section Scripts {
    <script src="~/_content/NeverFoundry.Wiki.Mvc/libs.js"></script>
    <script src="~/_content/NeverFoundry.Wiki.Mvc/chat.js"></script>
    <script>
        window.addEventListener("load", function () {
            window.wikimvcchat.init("@WikiWebConfig.WikiTalkHubRoute", "@WikiConfig.WikiLinkPrefix", "@WikiWebConfig.UserNamespace", "@WikiWebConfig.TenorAPIKey", "@Model.TopicId", '@Html.Raw(
                System.Text.Json.JsonSerializer.Serialize(
                    Model.Messages,
                    new System.Text.Json.JsonSerializerOptions
                    {
                        PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase,
                    }))');
        });
    </script>
}

<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp5.0</TargetFramework>
    <LangVersion>Latest</LangVersion>
    <Nullable>enable</Nullable>
    <UserSecretsId>aspnet-NeverFoundry.Wiki.MVCSample-BEB7FB0D-A5EE-4734-8EF8-D433C633615A</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..</DockerfileContext>
    <DockerComposeProjectPath>..\..\Docker\MVC\docker-compose-mvc.dcproj</DockerComposeProjectPath>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="Fido2" Version="1.1.0" />
    <PackageReference Include="HaemmerElectronics.SeppPenner.SerilogSinkForPostgreSQL" Version="1.6.0" />
    <PackageReference Include="MailKit" Version="2.6.0" />
    <PackageReference Include="Marten" Version="3.11.0" />
    <PackageReference Include="Marten.AspNetCore.Mvc" Version="1.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.0-preview.3.20215.14" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.0-preview.3.20215.14" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.0-preview.3.20181.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.9" />
    <PackageReference Include="NEST" Version="7.6.1" />
    <PackageReference Include="NeverFoundry.DataStore.Marten" Version="0.6.0" />
    <PackageReference Include="NeverFoundry.Wiki.Mvc" Version="0.2.2-preview" />
    <PackageReference Include="Npgsql" Version="4.1.3.1" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="5.0.0-preview3" />
    <PackageReference Include="Serilog" Version="2.9.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="3.2.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="3.1.0" />
  </ItemGroup>

  <!-- npm -->
  <PropertyGroup>
    <NpmStamp>node_modules/.install-stamp</NpmStamp>
  </PropertyGroup>
  <Target Name="NpmDebug" BeforeTargets="Build" Inputs="package.json;package-lock.json" Outputs="$(NpmStamp)">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- npm -->
    <Exec Command="npm install" />

    <!-- Create timestamp to prevent unnecessary repeats -->
    <Touch Files="$(NpmStamp)" AlwaysCreate="true" />
  </Target>

  <!-- Gulp Debug -->
  <Target Name="GulpDebug" BeforeTargets="Build" Condition="'$(Configuration)' == 'Debug'" Inputs="gulpfile.js;package.json;package-lock.json;content\styles\_custom.scss;content\styles\site.scss" Outputs="wwwroot\site.css">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- Gulp -->
    <Exec Command="npm install --global gulp-cli" />
    <Exec Command="gulp --envir Development" ConsoleToMSBuild="True">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
  </Target>

  <!-- Gulp Release -->
  <Target Name="GulpRelease" BeforeTargets="Build" Condition="'$(Configuration)' == 'GulpRelease'" Inputs="gulpfile.js;package.json;package-lock.json;content\styles\_custom.scss;content\styles\site.scss" Outputs="wwwroot\site.css">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- Gulp -->
    <Exec Command="npm install --global gulp-cli" />
    <Exec Command="gulp --envir Production" ConsoleToMSBuild="True">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
  </Target>

</Project>
